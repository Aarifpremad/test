<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Details</title>
    <link rel="stylesheet" href="/dashboard.css">
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
    <!-- DataTables Buttons CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.3/css/buttons.dataTables.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f3f4f6;
            display: flex;
            flex-direction: column;
            height: 100vh;
            overflow: auto;
        }

        .content{
            width: 84%;
            margin-left: 1rem;
        }

        .user-details-container {
            max-width: 100%;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-top: 1rem;
        }

        .user-details-header {
            display: flex;
            align-items: center;
            gap: 20px;
            margin-bottom: 20px;
        }

        .user-details-header img {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            border: 2px solid #ddd;
        }

        .user-info {
            flex-grow: 1;
        }

        .user-info h2 {
            margin: 0;
            font-size: 26px;
        }

        .user-info p {
            margin: 5px 0;
            font-size: 18px;
            color: #666;
        }

        .user-actions {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-top: 20px;
        }

        .user-actions button {
            flex: 1;
            padding: 10px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            color: #fff;
            cursor: pointer;
        }

        .btn-credit {
            background-color: #4caf50;
        }

        .btn-debit {
            background-color: #f44336;
        }

        .btn-freeze {
            background-color: #ff9800;
        }

        .btn-status {
            background-color: #2196f3;
        }

        .transaction-history {
            margin-top: 40px;
            background: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            display: none;
        }

        /* Pagination Styles */
        .pagination-container {
            margin-top: 20px;
            text-align: center;
        }

        .pagination-btn {
            padding: 8px 12px;
            border: 1px solid #ddd;
            margin: 5px;
            cursor: pointer;
        }

        .current-page {
            background-color: #007bff;
            color: white;
        }
    </style>
</head>
<body>
    <!-- Include Header -->
    <%- include('partials/header') %>

    <div class="main-container">
        <!-- Include Sidebar -->
        <%- include('partials/sidebar', { page: 'userDetails' }) %>

        <!-- Main Content -->
        <div class="content">
            <div class="user-details-container">
                <!-- User Header -->
                <div class="user-details-header">
                    <img src="/bot/<%= user.avatar %>.png" alt="User Image">
                    <div class="user-info">
                        <h2>UserName:<%= user.username %></h2>
                        <p>Mobile No: <%= user.mobileno %></p>
                        <p>Email: <%= user.email %></p>
                        <p>Wallet Balance: <%= user.balance %></p>
                        <p>Status: <%= user.status %></p>
                        <p>Wallet Frozen: <%= user.walletFrozen ? 'Yes' : 'No' %></p>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="user-actions">
                    <button class="btn-status" onclick="toggleStatus('<%= user.id %>')">
                        <%= user.status === 'Active' ? 'Deactivate Account' : 'Activate Account' %>
                    </button>
                    <button class="btn-credit" onclick="modifyWallet('<%= user.id %>', 'credit')">Deposit Wallet</button>
                    <button class="btn-debit" onclick="modifyWallet('<%= user.id %>', 'debit')">Withdraw Wallet</button>
                    <button class="btn-freeze" onclick="toggleFreeze('<%= user.id %>')">
                        <%= user.walletFrozen ? 'Unfreeze Wallet' : 'Freeze Wallet' %>
                    </button>
                    <button class="btn-status" onclick="toggleTransactionHistory()">Transaction History</button>
                    <button class="btn-status" >Beting History</button>
                </div>

                <!-- Transaction History Section -->
                <div class="transaction-history" id="transaction-history">
                    <h3>Transaction History</h3>

                    <table id="transaction-table" class="display">
                        <thead>
                            <tr>
                                <th>Type</th>
                                <th>Amount</th>
                                <th>Current Balance</th>
                                <th>Status</th>
                                <th>Note</th>
                                <th>Created At</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Data will be loaded dynamically by JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <!-- Include SweetAlert2 CSS and JS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function toggleStatus(userId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to change the user status?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, change it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/api/users/toggle-status/${userId}`, {
                    method: 'PUT'
                })
                .then(response => response.json())
                .then(data => {
                    Swal.fire('Success!', data.message, 'success');
                    const statusButton = document.querySelector('.btn-status');
                    statusButton.textContent = data.user.status === 'Active' ? 'Deactivate Account' : 'Activate Account';
                })
                .catch(error => {
                    Swal.fire('Error!', 'Failed to change status.', 'error');
                    console.error('Error toggling status:', error);
                });
            }
        });
    }

    function modifyWallet(userId, action) {
        Swal.fire({
            title: 'Enter the amount Available Balance is <%= user.balance %>',
            input: 'number',
            inputAttributes: {
                min: 1
            },
            showCancelButton: true,
            confirmButtonText: 'Submit',
            preConfirm: (amount) => {
                if (!amount || isNaN(amount) || amount <= 0) {
                    Swal.showValidationMessage('Please enter a valid amount.');
                }
                return amount;
            }
        }).then((result) => {
            if (result.isConfirmed) {
                const endpoint = action === 'credit' ? '/wallet/deposit/' : '/wallet/withdraw/';
                fetch(`/api/users${endpoint}${userId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ amount: result.value })
                })
                .then(response => response.json())
                .then(data => {
                    Swal.fire('Success!', data.message, 'success');
                    document.querySelector('.user-info p:nth-child(4)').textContent = `Wallet Balance: ${data.user.balance}`;
                })
                .catch(error => {
                    Swal.fire('Error!', 'Failed to modify wallet.', 'error');
                    console.error('Error modifying wallet:', error);
                });
            }
        });
    }

    function toggleFreeze(userId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to toggle wallet freeze?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, change it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/api/users/toggle-freeze/${userId}`, {
                    method: 'PUT'
                })
                .then(response => response.json())
                .then(data => {
                    Swal.fire('Success!', data.message, 'success');
                    const freezeButton = document.querySelector('.btn-freeze');
                    document.querySelector('.user-info p:nth-child(6)').textContent = `Wallet Frozen: ${data.user.walletFrozen ? 'No' : 'Yes'}`;
                    freezeButton.textContent = data.user.walletFrozen ? 'Unfreeze Wallet' : 'Freeze Wallet';
                })
                .catch(error => {
                    Swal.fire('Error!', 'Failed to toggle wallet freeze.', 'error');
                    console.error('Error freezing/unfreezing wallet:', error);
                });
            }
        });
    }
</script>

    <script>
        const apiBase = '/api/users';
        const userId = "<%= user.id %>";
    
        function initializeTransactionTable() {
            $('#transaction-table').DataTable({
                serverSide: true, // Enable server-side processing
                processing: true, // Show a processing indicator
                ajax: function (data, callback, settings) {
                    const params = {
                        type: '', // You can customize this based on user selection
                        limit: data.length,
                        page: data.start / data.length + 1,
                        search: data.search.value || '',
                        orderColumn: data.order.length ? data.order[0].column : '',
                        orderDir: data.order.length ? data.order[0].dir : ''
                    };

                    fetch(`/api/users/transactions/${userId}?` + new URLSearchParams(params))
                        .then(response => response.json())
                        .then(result => {
                            callback({
                                draw: data.draw,
                                recordsTotal: result.totalRecords,
                                recordsFiltered: result.filteredRecords,
                                data: result.transactions
                            });
                        })
                        .catch(error => {
                            console.error('Error fetching transaction history:', error);
                        });
                },
                columns: [
                    { data: 'type' },
                    { data: 'amount' },
                    { data: 'currentbalance' },
                    { data: 'status' },
                    { data: 'details.description' },
                    { data: 'createdAt', render: (data) => new Date(data).toLocaleString() }
                ],
                dom: 'B<"top"lfr>t<"bottom"p><"clear">',
                buttons: ['excelHtml5', 'pdfHtml5'],
                paging: true,
                ordering: true,
                searching: true
            });
        }
    
        function toggleTransactionHistory() {
            const historySection = document.getElementById("transaction-history");
            historySection.style.display = historySection.style.display === "none" ? "block" : "none";
    
            if (historySection.style.display === "block") {
                if (!$.fn.DataTable.isDataTable('#transaction-table')) {
                    initializeTransactionTable(); // Initialize DataTable if not already initialized
                }
            }
        }

        document.addEventListener("DOMContentLoaded", () => {
            document.getElementById("transaction-history").style.display = "none";
        });
    </script>
</body>
</html>
