<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Tournament</title>
    <link rel="stylesheet" href="/dashboard.css">
    <link rel="stylesheet" href="/speen.css">
    <link rel="stylesheet" href="/tournament.css">

</head>
<body>
    <%- include('partials/header') %>
    <div class="main-container">
        <%- include('partials/sidebar', { page: 'tournament-create' }) %>
        <div class="main-content">
            <h1>Create Ludo Tournament</h1>
            <form id="tournamentForm" action="/api/create-tournament" method="POST" enctype="multipart/form-data">
                <!-- Tournament Details -->
                <div class="form-section">
                    <h2>Tournament Details</h2>
                    <div class="form-group">
                        <label for="tournamentName">Tournament Name:</label>
                        <input type="text" id="tournamentName" name="tournamentName" placeholder="Enter tournament name" required />
                    </div>
                    <div class="form-group">
                        <label for="tournamentDescription">Description:</label>
                        <textarea id="tournamentDescription" name="tournamentDescription" placeholder="Enter tournament description" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="startDate">Start Date:</label>
                        <input type="datetime-local" id="startDate" name="startDate" required />
                    </div>
                    <div class="form-group">
                        <label for="endDate">End Date:</label>
                        <input type="date" data-date="" data-date-format="DD MMMM YYYY"  value="" id="endDate" name="endDate" required />
                    </div>
                    
                                    
                <div class="form-group">
                    <label for="thumbnail">Tournament Thumbnail:</label>
                    <input type="file" id="thumbnail" name="thumbnail" accept="image/*" required />
                  </div>

                    <div class="form-group">
                        <label for="gameMode">Game Mode:</label>
                        <select id="gameMode" name="gameMode" required>
                            <option value="cllasic">Cllasic</option>
                            <!-- <option value="multiplayer">4 Player</option> -->
                        </select>
                    </div>
                </div>

                <!-- Game Details -->
                <div class="form-section">
                    <h2>Game Details</h2>
                    <div class="form-group">
                        <label for="entryFee">Entry Fee (per user):</label>
                        <input type="number" id="entryFee" name="entryFee" placeholder="Enter entry fee" required />
                    </div>
                    <div class="form-group">
                        <label for="maxUsers">Maximum Users:</label>
                        <input type="number" id="maxUsers" name="maxUsers" placeholder="Enter maximum users" required />
                    </div>
                    <div class="form-group">
                        <label for="roomSize">Room Size:</label>
                        <div class="room-size-inputs">
                            <input type="number" id="minRoomSize" name="minRoomSize" placeholder="Minimum players per room" required />
                            <input type="number" id="maxRoomSize" name="maxRoomSize" placeholder="Maximum players per room" required />
                        </div>
                    </div>
                </div>

                <!-- Prize Distribution -->
                <div class="form-section">
                    <h2>Prize Distribution</h2>
                    <table class="prize-distribution-table">
                        <thead>
                            <tr>
                                <th style="width: 20%;">Rank</th>
                                <th style="width: 30%;">Prize Type</th>
                                <th style="width: 40%;">Prize Value</th>
                                <th style="width: 10%;">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="prizeDistribution">
                            <tr>
                                <td><input type="text" name="rank[]" placeholder="Rank (e.g., 1)" required /></td>
                                <td>
                                    <select name="prizeType[]" required>
                                        <option value="amount">Amount</option>
                                        <option value="gift">Gift</option>
                                    </select>
                                </td>
                                <td><input type="text" name="prizeValue[]" placeholder="Enter prize value" required /></td>
                                <td><button type="button" class="remove-button" onclick="removeRow(this)">Remove</button></td>
                            </tr>
                        </tbody>
                    </table>
                    
                    <button type="button" class="add-button" onclick="addRow()">Add Rank</button>
                </div>

                <!-- Submit Button -->
                <div class="form-actions">
                    <button type="submit" class="add-button">Create Tournament</button>
                </div>
            </form>
        </div>
    </div>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.getElementById('tournamentForm').addEventListener('submit', async function (event) {
            event.preventDefault();
    
            const formData = new FormData(this);
            const thumbnail = formData.get('thumbnail');
            const minRoomSize = parseInt(formData.get('minRoomSize'));
            const maxRoomSize = parseInt(formData.get('maxRoomSize'));
            const ranks = formData.getAll('rank[]');
    
            // Client-side validations
            if (!thumbnail) {
                alert('Thumbnail is required');
                return;
            }
            if (minRoomSize > maxRoomSize) {
                alert('Minimum room size cannot be greater than maximum room size');
                return;
            }
            if (new Set(ranks).size !== ranks.length) {
                alert('Ranks must be unique');
                return;
            }
            console.log(formData)
            try {
                // Show a loading spinner or disable the submit button (optional)
                const response = await fetch('/api/create-tournament', {
                    method: 'POST',
                    body: formData,
                });
    
                const result = await response.json();
                if (response.ok) {
                    Swal.fire('Success!', "successfully create tournament", 'success');
                    this.reset(); // Reset the form on success
                } else {
                    // Display backend validation errors
                    Swal.fire('Success!', "something wrong", 'success');

                }
            } catch (error) {
                Swal.fire('Success!', "something wrong", 'success');
            }
        });
    
        function addRow() {
            const table = document.getElementById('prizeDistribution');
            const row = document.createElement('tr');
            row.innerHTML = `
                <td><input type="text" name="rank[]" placeholder="Rank" required /></td>
                <td>
                    <select name="prizeType[]" required>
                        <option value="amount">Amount</option>
                        <option value="gift">Gift</option>
                    </select>
                </td>
                <td><input type="text" name="prizeValue[]" placeholder="Enter prize value" required /></td>
                <td><button type="button" class="remove-button" onclick="removeRow(this)">Remove</button></td>
            `;
            table.appendChild(row);
        }
    
        function removeRow(button) {
            const row = button.closest('tr');
            row.parentNode.removeChild(row);
        }
    </script>
</body>
</html>
