<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tournament Details</title>
    <link rel="stylesheet" href="/dashboard.css">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f3f4f6;
            display: flex;
            flex-direction: column;
            height: 100vh;
            overflow: auto;
        }

        .content {
            width: 84%;
            margin-left: 1rem;
        }

        .tournament-details-container {
            max-width: 100%;
            padding: 25px;
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            margin-top: 1.5rem;
        }

        .tournament-details-header {
            display: flex;
            align-items: center;
            gap: 20px;
            margin-bottom: 25px;
        }

        .tournament-details-header img {
            width: 140px;
            height: 140px;
            border-radius: 12px;
            border: 3px solid #ddd;
            object-fit: cover;
        }

        .tournament-info {
            flex-grow: 1;
        }

        .tournament-info h2 {
            margin: 0;
            font-size: 28px;
            font-weight: 600;
            color: #333;
        }

        .tournament-info p {
            margin: 6px 0;
            font-size: 16px;
            color: #555;
        }

        .tournament-actions {
            display: flex;
            flex-wrap: wrap;
            gap: 12px;
            margin-top: 20px;
        }

        .tournament-actions select {
            padding: 10px;
            font-size: 16px;
            border: 2px solid #ddd;
            border-radius: 6px;
            background: white;
            cursor: pointer;
        }

        .tournament-actions button {
            flex: 1;
            padding: 12px;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            font-weight: 600;
            color: white;
            cursor: pointer;
            transition: 0.3s ease-in-out;
        }

        .btn-edit {
            background-color: #28a745;
        }

        .btn-edit:hover {
            background-color: #218838;
        }

        .btn-delete {
            background-color: #dc3545;
        }

        .btn-delete:hover {
            background-color: #c82333;
        }

        .btn-back {
            background-color: #007bff;
        }

        .btn-back:hover {
            background-color: #0056b3;
        }
        .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100px;
        height: 100px;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
    }
    
    .modal-content {
        background: white;
        padding: 25px;
        border-radius: 10px;
        width: 150px;
        text-align: center;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        position: relative;
    }
    
    .close {
        position: absolute;
        right: 15px;
        top: 10px;
        font-size: 22px;
        cursor: pointer;
        color: #555;
    }
    
    .close:hover {
        color: black;
    }
    
    input, textarea {
        width: 100%;
        padding: 12px;
        margin: 12px 0;
        border: 1px solid #ccc;
        border-radius: 6px;
        font-size: 16px;    
    }
    
    .btn-send {
        background: #007bff;
        color: white;
        padding: 12px;
        width: 100%;
        border: none;
        border-radius: 6px;
        font-size: 16px;
        cursor: pointer;
        transition: background 0.3s;
    }
    
    .btn-send:hover {
        background: #0056b3;
    }

    select {
        width: 100%;
        padding: 12px;
        border: 2px solid #ddd;
        border-radius: 6px;
        font-size: 16px;
        background: white;
        cursor: pointer;
        margin-top: 10px;
    }
    </style>
</head>
<body>
    <!-- Include Header -->
    <%- include('partials/header') %>

    <div class="main-container">
        <%- include('partials/sidebar', { page: 'tournament-view' }) %>
        
        <div class="content">
            <div class="tournament-details-container">
                <div class="tournament-details-header">
                    <img src="<%= tournament.thumbnail %>" alt="Tournament Image">
                    <div class="tournament-info">
                        <h2><%= tournament.tournamentName %></h2>
                        <p><strong>Description:</strong> <%= tournament.tournamentDescription %></p>
                        <p><strong>Start Date:</strong> <%= tournament.startDate %></p>
                        <p><strong>Start Time:</strong> <%= tournament.startTime %></p>
                        <p><strong>End Date:</strong> <%= tournament.endDate %></p>
                        <p><strong>End Time:</strong> <%= tournament.endTime %></p>
                        <p><strong>Status:</strong> <%= tournament.status %></p>
                    </div>
                    <div class="tournament-info">
                        <h2><%= tournament.tournamentid %></h2>
                        <p><strong>Entry Fee:</strong> <%= tournament.entryFee %></p>
                        <p><strong>Max Users:</strong> <%= tournament.maxUsers %></p>
                        <p><strong>Max Room Size:</strong> <%= tournament.maxRoomSize %></p>
                        <p><strong>Game Mode:</strong> <%= tournament.gameMode %></p>
                    </div>
                </div>

                <div class="tournament-actions">
                    <button class="btn-edit" onclick="openStatusModal('<%= tournament.tournamentid %>')">Update Status</button>
                    <button class="btn-delete" onclick="deleteTournament('<%= tournament._id %>')">Delete</button>
                    <button class="btn-back" onclick="toggleRooms()">Tournament Rooms</button>
                    <button class="btn-back" onclick="sendNotification()">Send Notification</button>
                </div>

            </div>
            
            <div id="roomsContainer"></div>

        </div>
    </div>

    <div id="notificationModal" class="modal">
        <div class="modal-content" style="width: 30%;">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2>Send Notification</h2>
            <input type="text" id="notifTitle" placeholder="Enter notification title" style="margin-top: 10px">
            <input type="file" id="iconInput" accept="image/*" style="margin-top: 10px">
            <textarea id="notifMessage" placeholder="Enter notification message" style="margin-top: 10px;"></textarea>
            <button class="btn-send" onclick="sendNotificationToServer()" style="margin-top: 10px">Send Notification</button>
        </div>
    </div>
    <div id="statusModal" class="modal">
        <div class="modal-content" style="width: 30%;">
            <span class="close" onclick="closeStatusModal()">&times;</span>
            <h2>Update Status</h2>
            <select id="statusSelect">
                <option value="draft">Draft</option>
                <option value="published">Published</option>
                <option value="completed">Completed</option>
            </select>

            <button class="btn-send" onclick="updateStatus()" style="margin-top: 10px;">Update</button>
        </div>
    </div>

<script>
function toggleRooms() {
    let container = document.getElementById("roomsContainer");

    if (container.innerHTML.trim() === "") {
        // Agar table exist nahi karta, toh create karo
        container.innerHTML = `
            <h2>Upcoming Rooms</h2>
            <table id="upcomingRoomsTable" class="display" style="width: 100%;">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Room Name</th>
                        <th>Players</th>
                        <th>Entry Fee</th>
                        <th>Status</th>
                    </tr>
                </thead>
            </table>
        `;  

        $('#upcomingRoomsTable').DataTable({
            ajax: {
                url: `/api/tournament-rooms/<%= tournament._id %>`,
                dataSrc: 'data'
            },
            columns: [
                { data: '_id' },
                { data: 'roomName' },
                { data: 'players' },
                { data: 'entryFee' },
                { data: 'status' }
            ],
            destroy: true
        });
    } else {
        // Agar table pehle se exist karta hai, toh sirf data reload karo
        $('#upcomingRoomsTable').DataTable().ajax.reload();
    }
}
</script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        function openStatusModal(tournamentId) {
            document.getElementById("statusModal").style.display = "flex";
        }

        function closeStatusModal() {
            document.getElementById("statusModal").style.display = "none";
        }


        function updateStatus() {
    const tournamentId = "<%= tournament._id %>";  // EJS se ID fetch karein
    const newStatus = document.getElementById("statusSelect").value;

    fetch(`/api/tournamentstatus/${tournamentId}`, {
        method: "post",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({ status: newStatus }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success == true) {
            Swal.fire('Success!', 'Tournament status updated successfully!', 'success');
            location.reload(); // UI update karne ke liye page reload karein
        } else {
            alert("Error updating status!");
        }
    })
    .catch(error => {
        console.error("Error updating status:", error);
        alert("Failed to update status");
    });
}

        function deleteTournament(id) {
            
            Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to Delete this Tournament?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, change it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/api/delete-tournament/' + id, { method: 'DELETE' })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire('Success!', "successfully Delete Bot", 'success');
                            window.location.href = "/tournament/list";
                        } else {
                            alert("Error deleting tournament: " + data.message);
                        }
                    })
                    .catch(error => console.error("Error:", error));
            }
        });
        }
    </script>
    <script>
        function sendNotification() {
            document.getElementById("notificationModal").style.display = "flex";
        }
    
        function closeModal() {
            document.getElementById("notificationModal").style.display = "none";
        }
    
        function sendNotificationToServer() {
            const title = document.getElementById("notifTitle").value;
            const icon = document.getElementById("notifIcon").value;
            const message = document.getElementById("notifMessage").value;
    
            if (!title || !message) {
                alert("Title and Message are required!");
                return;
            }
    
            fetch('/api/send-notification', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ title, icon, message })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Notification sent successfully!");
                    closeModal();
                } else {
                    alert("Error sending notification: " + data.message);
                }
            })
            .catch(error => console.error("Error:", error));
        }
    </script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>
</html>
